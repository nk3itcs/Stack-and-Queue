//{ Driver Code Starts
//Initial template for C++

#include<bits/stdc++.h>
using namespace std;

// } Driver Code Ends
//User function template for C++

class Solution 
{
    public:
    //Function to find if there is a celebrity in the party or not.
    int celebrity(vector<vector<int> >& M, int n) 
    {
        stack<int> st;
        int i=0;
        
        while(i<n){
            st.push(i++);
        }
        while(st.size()>1){
            int ele1=st.top();
            st.pop();
            int ele2=st.top();
            st.pop();
            
            if(M[ele1][ele2]==1)
                st.push(ele2);
            else if(M[ele2][ele1]==1)
                st.push(ele1);
            
        }
        bool row=true,col=true;
        if(st.empty())
            return -1; // it was failing for this test case beacuse at the end  no element i  stack  0 0 1 0 0 0 0 1 0
        int celeb=st.top();
        for(int j=0;j<n;j++){
            if( celeb!=j and M[celeb][j]!=0)
            {
                row=false;
                break;
            }
            if(celeb!=j and M[j][celeb]!=1){
                col=false;
                break;
            }
        }
        
        if(row and col)
            return celeb;
        return -1;
    }
};

//{ Driver Code Starts.

int main()
{
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        vector<vector<int> > M( n , vector<int> (n, 0));
        for(int i=0;i<n;i++)
        {
            for(int j=0;j<n;j++)
            {
                cin>>M[i][j];
            }
        }
        Solution ob;
        cout<<ob.celebrity(M,n)<<endl;

    }
}

// } Driver Code Ends
